Answer
------
Problem: 8 disks, A→C using B
Total moves: 255  (expected 2^8-1 = 255)

Move list:
  1. move disk 1: A → B
  2. move disk 2: A → C
  3. move disk 1: B → C
  4. move disk 3: A → B
  5. move disk 1: C → A
  6. move disk 2: C → B
  7. move disk 1: A → B
  8. move disk 4: A → C
  9. move disk 1: B → C
 10. move disk 2: B → A
 11. move disk 1: C → A
 12. move disk 3: B → C
 13. move disk 1: A → B
 14. move disk 2: A → C
 15. move disk 1: B → C
 16. move disk 5: A → B
 17. move disk 1: C → A
 18. move disk 2: C → B
 19. move disk 1: A → B
 20. move disk 3: C → A
 21. move disk 1: B → C
 22. move disk 2: B → A
 23. move disk 1: C → A
 24. move disk 4: C → B
 25. move disk 1: A → B
 26. move disk 2: A → C
 27. move disk 1: B → C
 28. move disk 3: A → B
 29. move disk 1: C → A
 30. move disk 2: C → B
 31. move disk 1: A → B
 32. move disk 6: A → C
 33. move disk 1: B → C
 34. move disk 2: B → A
 35. move disk 1: C → A
 36. move disk 3: B → C
 37. move disk 1: A → B
 38. move disk 2: A → C
 39. move disk 1: B → C
 40. move disk 4: B → A
  ...
246. move disk 2: C → B
247. move disk 1: A → B
248. move disk 4: A → C
249. move disk 1: B → C
250. move disk 2: B → A
251. move disk 1: C → A
252. move disk 3: B → C
253. move disk 1: A → B
254. move disk 2: A → C
255. move disk 1: B → C

Reason why
----------
Recurrence & optimality:
  To move n disks A→C with helper B:
    1) move n−1 A→B,  2) move disk n A→C,  3) move n−1 B→C.
  This yields T(n) = 2·T(n−1) + 1 with T(1)=1 ⇒ T(n)=2^n−1 (minimal).

Per-disk move counts (theory: disk k moves 2^(n−k) times):
  disk 1: 128 (theory 128) ✓
  disk 2: 64 (theory 64) ✓
  disk 3: 32 (theory 32) ✓
  disk 4: 16 (theory 16) ✓
  disk 5: 8 (theory 8) ✓
  disk 6: 4 (theory 4) ✓
  disk 7: 2 (theory 2) ✓
  disk 8: 1 (theory 1) ✓

Check (harness)
---------------
OK. Final pegs: A:[] | B:[] | C:[8 7 6 5 4 3 2 1]

