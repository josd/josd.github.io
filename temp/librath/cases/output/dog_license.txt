Answer
------
License obligations derived for:
  alice: 5 dogs → mustHave dogLicense
    evidence: dog1, dog2, dog3, dog4, dog5

Reason why
----------
We use a single rule with a built-in check:
  R-licence:
    mustHave(?P, dogLicense)  :-  count_dogs(?P) and  count > 4.
The built-in counts hasDog facts for ?P at proof time.

[Trace for alice]
Step 01: prove ('alice', 'mustHave', 'dogLicense')
→ via R-licence
 ↪ alice owns 5 dogs (dog1, dog2, dog3, dog4, dog5) > 4 ✓

[Trace for bob]
Step 01: prove ('bob', 'mustHave', 'dogLicense')
→ via R-licence
 ↪ bob owns only 2 dogs ✗

Check (harness)
---------------
OK: counts and threshold verified; derived triples persisted; re-run consistent.

Triples (sorted)
----------------
alice  hasDog  dog1 .
alice  hasDog  dog2 .
alice  hasDog  dog3 .
alice  hasDog  dog4 .
alice  hasDog  dog5 .
alice  mustHave  dogLicense .
bob  hasDog  dog6 .
bob  hasDog  dog7 .
