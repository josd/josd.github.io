# ANSWER
{
  "eligible": [
    {
      "id": "p1",
      "name": "Alice Dupont",
      "age": 75
    },
    {
      "id": "p4",
      "name": "Daan Vermeulen",
      "age": 85
    },
    {
      "id": "p6",
      "name": "Farid El Amrani",
      "age": 66
    }
  ]
}

# REASONS
- Alice Dupont (born 1950-06-15) is 75 on 2025-09-18 → eligible by policy age ≥ 65.
- Benoît Leroy (born 1960-12-01) is 64 on 2025-09-18 → not eligible by policy age ≥ 65.
- Chiara Rossi (born 1965-09-18) is 60 on 2025-09-18 → not eligible by policy age ≥ 65.
- Daan Vermeulen (born 1940-02-29) is 85 on 2025-09-18 → eligible by policy age ≥ 65.
- Eva Janssens (born 2000-07-30) is 25 on 2025-09-18 → not eligible by policy age ≥ 65.
- Farid El Amrani (born 1959-09-17) is 66 on 2025-09-18 → eligible by policy age ≥ 65.

Wrote ./cases/bus/shop/eligible_customers.json

# CHECK (harness) — detailed
Check 1 — Dual age methods agree per person:
  - p1 Alice Dupont: primary=75, alt=75
  - p2 Benoît Leroy: primary=64, alt=64
  - p3 Chiara Rossi: primary=60, alt=60
  - p4 Daan Vermeulen: primary=85, alt=85
  - p5 Eva Janssens: primary=25, alt=25
  - p6 Farid El Amrani: primary=66, alt=66
Check 2 — Policy consistency on eligible/ineligible partitions:
  - Eligible IDs:   ['p1', 'p4', 'p6']
  - Ineligible IDs: ['p2', 'p3', 'p5']
  - p1 must be ≥ 65: computed age=75
  - p4 must be ≥ 65: computed age=85
  - p6 must be ≥ 65: computed age=66
  - p2 must be < 65: computed age=64
  - p3 must be < 65: computed age=60
  - p5 must be < 65: computed age=25
Check 3 — Leap-day handling parity:
Check 4 — Output schema contains required fields:
  - field 'reference_date': present
  - field 'policy': present
  - field 'eligible': present
✔ All checks passed.
