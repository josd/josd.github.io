Answer
------
Plan (first found with length ≤ 5, Prolog order):
  go(loc3) → push(loc1) → climb_on → grab
Final state:
  [bananas=loc1, monkey=loc1, box=loc1, on_box=y, has_bananas=y]

Trace
-----
Start: [bananas=loc1, monkey=loc2, box=loc3, on_box=n, has_bananas=n]
   1. go(loc3)     → [bananas=loc1, monkey=loc3, box=loc3, on_box=n, has_bananas=n]
   2. push(loc1)   → [bananas=loc1, monkey=loc1, box=loc1, on_box=n, has_bananas=n]
   3. climb_on     → [bananas=loc1, monkey=loc1, box=loc1, on_box=y, has_bananas=n]
   4. grab         → [bananas=loc1, monkey=loc1, box=loc1, on_box=y, has_bananas=y]

Reason why
----------
1. go(loc3): Not on box; walk to loc3.
2. push(loc1): Box with monkey (L==M) and not on it; push to loc1.
3. climb_on: Box at monkey's location and not on it ⇒ climb_on allowed.
4. grab: Bananas, monkey, and box co-located and on_box ⇒ grab allowed.

Check (harness)
---------------
OK: all preconditions hold, goal reached, and no shorter plan exists (within 1..len(plan)-1).
