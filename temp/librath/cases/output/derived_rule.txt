Answer
------
Generated ordinary rules (from meta rules):
  1. Rgen-from-cat (origin: R1-cat-makes-rule)
     premises   : [('?y', 'a', ':Dog')]
     conclusions: [(':test', ':is', 'true')]

Query: (':test', ':is', 'true')
Result: PROVED
Substitution (bindings): {'?y': ':Charly'}
Rules used: ['Rgen-from-cat']

Reason why
----------
Meta → rule:
  R1-cat-makes-rule: if (?x a :Cat) then generate Rgen-from-cat:
    Rgen-from-cat: premises [(?y a :Dog)] ⇒ conclusions [(:test :is true)].
  With (:Minka a :Cat) in facts, this rule is admitted.

Backward proof (first lines):
  prove (':test', ':is', 'true')
  → via Rgen-from-cat
    prove ('?y', 'a', ':Dog')
    ✓ fact (':Charly', 'a', ':Dog')

Check (harness)
---------------
OK: rule generation, proof steps, and bindings all verified.
